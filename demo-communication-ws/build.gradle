import org.apache.tools.ant.filters.ReplaceTokens

//buildscript {
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springbootPluginVer}")
//    }
//}
plugins {
    id "java"
//    id "war"
    id "org.springframework.boot" version "${springbootVersion}"
    id "io.spring.dependency-management" version "${springDependencyVer}"

    id 'com.google.protobuf' version "0.9.4"
}

dependencies {
    implementation project(":demo-communication-api")
//    implementation project(":demo-communication-impl")

    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "org.springframework.boot:spring-boot"
    implementation "org.springframework.boot:spring-boot-starter"
//    implementation "org.springframework.boot:spring-boot-autoconfigure"
//    implementation "org.springframework.boot:spring-boot-starter-actuator"
//    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
//    implementation "org.springframework.boot:spring-boot-starter-integration"
//    implementation "org.springframework.boot:spring-boot-starter-web"
//    implementation "org.springframework.boot:spring-boot-starter-jersey"
//    implementation "org.springframework.boot:spring-boot-starter-web-services"
//    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-websocket"
//    implementation "org.springframework.boot:spring-boot-starter-aop"

//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.session:spring-session-core'
    implementation "org.mapstruct:mapstruct:${mapstructVer}"

    implementation "org.bouncycastle:bcprov-jdk18on:${bouncycastleVersion}"
    implementation "org.infinispan:infinispan-core-jakarta"
    implementation "com.auth0:java-jwt:${javaJwtVer}"

    implementation "io.grpc:grpc-protobuf:${grpcProtobufVer}"
    implementation "io.grpc:grpc-stub:${grpcProtobufVer}"
    implementation "com.google.protobuf:protobuf-java:${protobufProtocVer}"
//    implementation "com.google.protobuf:protobuf-java-util:${protobufProtocVer}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcProtobufVer}"

//    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVer}"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.infinispan:infinispan-commons-jakarta"
    testImplementation "org.assertj:assertj-core"
//    testImplementation "com.auth0:java-jwt:${javaJwtVer}"
    testImplementation "org.springframework.boot:spring-boot-starter-webflux"
}

test {
    useJUnitPlatform()
}
//final def env = "${System.getProperty('spring.profiles.active')}"
//final def env = "${project.getProperties().get('env')}"
final def env = "${System.getProperty('env', '')}"
processResources {
//    filesMatching('*.yml') {
//        expand(project.properties)
//    }
    filesMatching('*.yml') {
        expand(System.properties)
    }
}
//bootJar { archiveFileName = "${archiveBaseName.get()}-${project.getProperties().get('env')}-${appVersion}.${archiveExtension.get()}" }
//bootWar { archiveFileName = "${archiveBaseName.get()}-${project.getProperties().get('env')}-${appVersion}.${archiveExtension.get()}" }

bootJar { archiveFileName = "${archiveBaseName.get()}-${env}-${appVersion}.${archiveExtension.get()}" }
//bootWar { archiveFileName = "${archiveBaseName.get()}-${env}-${appVersion}.${archiveExtension.get()}" }
protobuf {
    generatedFilesBaseDir = "${projectDir}/src/generated"
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufProtocVer}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcProtobufVer}"
        }
    }
//    generateProtoTasks {
//        all()*.plugins {
//            grpc {}
//        }
//    }
//    generateProtoTasks {
//        all().each { task ->
//            task.builtins { java {outputSubDir="java"} }
//            task.plugins { grpc {outputSubDir="grpc"} }
//        }
//    }
    generateProtoTasks {
        all().each { task ->
            task.builtins { java { } }
            task.plugins { grpc { } }
        }
    }
}
sourceSets {
    main {
        proto {
//            srcDirs += "src/main/proto"
        }
        java {
            srcDirs += "src/generated/main/java"
            srcDirs += "src/generated/main/grpc"
            srcDirs -= file("build/generated/source/proto/main/java")
//            srcDirs += "build/generated/source/proto/main/java";
//            srcDirs += "build/generated/source/proto/main/grpc";
        }
    }
}
compileJava.dependsOn generateProto
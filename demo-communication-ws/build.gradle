//buildscript {
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springbootPluginVer}")
//    }
//}
plugins {
    id "java"
//    id "war"
    id "org.springframework.boot" version "${springbootVersion}"
    id "io.spring.dependency-management" version "${springDependencyVer}"
}

dependencies {
    implementation project(":demo-communication-api")
//    implementation project(":demo-communication-impl")

    implementation "org.springframework.boot:spring-boot"
    implementation "org.springframework.boot:spring-boot-starter"
//    implementation "org.springframework.boot:spring-boot-autoconfigure"
//    implementation "org.springframework.boot:spring-boot-starter-actuator"
//    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-integration"
//    implementation "org.springframework.boot:spring-boot-starter-web"
//    implementation "org.springframework.boot:spring-boot-starter-jersey"
//    implementation "org.springframework.boot:spring-boot-starter-web-services"
//    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-websocket"
//    implementation "org.springframework.boot:spring-boot-starter-aop"

//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.session:spring-session-core'

    implementation "org.bouncycastle:bcprov-jdk18on:${bouncycastleVersion}"
    implementation "org.infinispan:infinispan-core-jakarta"
    implementation "com.auth0:java-jwt:${javaJwtVer}"

//    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.infinispan:infinispan-commons-jakarta"
    testImplementation "org.assertj:assertj-core"
    testImplementation "com.auth0:java-jwt:${javaJwtVer}"
    testImplementation "org.springframework.boot:spring-boot-starter-webflux"
}

test {
    useJUnitPlatform()
}
//final def env = "${System.getProperty('spring.profiles.active')}"
//final def env = "${project.getProperties().get('env')}"
final def env = "${System.getProperty('env')}"
processResources {
//    filesMatching('*.yml') {
//        expand(project.properties)
//    }
    filesMatching('*.yml') {
        expand(System.properties)
    }
}
//bootJar { archiveFileName = "${archiveBaseName.get()}-${project.getProperties().get('env')}-${appVersion}.${archiveExtension.get()}" }
//bootWar { archiveFileName = "${archiveBaseName.get()}-${project.getProperties().get('env')}-${appVersion}.${archiveExtension.get()}" }

bootJar { archiveFileName = "${archiveBaseName.get()}-${env}-${appVersion}.${archiveExtension.get()}" }
//bootWar { archiveFileName = "${archiveBaseName.get()}-${env}-${appVersion}.${archiveExtension.get()}" }
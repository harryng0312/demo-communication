apiVersion: apps/v1
kind: Deployment
metadata:
  name: "nginx-deployment"
spec:
  replicas: 2
  strategy:
    type: Recreate
  selector:
    # name: nginx-pod
    matchLabels:
      app: app-nginx
  template:
    metadata:
      labels:
        app: app-nginx
    spec:
      volumes:
      - name: nginx-vol
        persistentVolumeClaim:
          claimName: nginx-pvc
      containers:
      - name: app-nginx-con
        image: nginx:latest
        # securityContext:
          # privileged: true
        #   readOnlyRootFilesystem: false
        #   runAsNonRoot: false
        resources:
          limits:
            memory: "64Mi"
            cpu: "0.2"
        volumeMounts:
        - mountPath: /usr/share/nginx
          # subPath: html
          # mountPropagation: Bidirectional
          name: nginx-vol
        ports:
        - containerPort: 80 # internal port

---
apiVersion: v1
kind: Service
metadata:
  name: "nginx-svc"
spec:
  selector:
    app: app-nginx
  # type: NodePort
  # type: LoadBalancer
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 8080      # LoadBalancer: for other pods/external access
    targetPort: 80  # for port target of deployment's
    # nodePort: 30007   # NodePort: for other node to access

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "nginx-ingress"
  annotations:
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    # nginx.ingress.kubernetes.io/use-regex: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: "nginx-svc"
            port:
              number: 8080
    # host: harryng-mbp   # from outside

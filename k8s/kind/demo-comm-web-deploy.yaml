apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo-communication
  name: rs
  labels:
    app: rs
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rs-con
  strategy:
    type: RollingUpdate
  template:
    metadata:
      name: rs-con
      labels:
        app: rs-con
    spec:
      restartPolicy: Always
#      nodeSelector:
#        nodePool: cluster
#        node-role.kubernetes.io/worker: worker  # deploy on worker nodes
      volumes:
        - name: rs-vol
          persistentVolumeClaim:
            claimName: rs-pvc
      containers:
        - name: rs-con
          image: openjdk:21-ea-jdk-slim
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "384Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "750m"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
          envFrom:
            - configMapRef:
                name: web-cm
          volumeMounts:
            - mountPath: /mnt/data
              name: rs-vol
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 50051
              protocol: TCP
          workingDir: /mnt/data/java
#          command: ["tail", "-f", "/dev/null"]
          command: ["java", "-jar", "-Xms384m", "-Xmx384m", "demo-communication-web-test-1.0.0.jar"]
          startupProbe:
            exec:
              command: ["date"]
            initialDelaySeconds: 15
            periodSeconds: 15
            failureThreshold: 3
#          livenessProbe:
#            httpGet:
#              port: 18080
#              path: /healthz
#            initialDelaySeconds: 10 # wait before start checking
#            periodSeconds: 15
#            failureThreshold: 3
#          readinessProbe:
#            httpGet:
#              path: /ready
#              port: 8080
#            initialDelaySeconds: 5
#            periodSeconds: 10

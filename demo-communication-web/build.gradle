//buildscript {
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springbootPluginVer}")
//    }
//}
plugins {
    id "java"
//    id "war"
    id "org.springframework.boot" version "${springbootVersion}"
    id "io.spring.dependency-management" version "${springDependencyVer}"

    id 'com.google.protobuf' version "0.9.4"
//    id "idea"
}

dependencies {
    implementation project(":demo-communication-api")
    implementation project(":demo-communication-impl")

//    implementation "jakarta.annotation:jakarta.annotation-api:3.0.0"
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "org.springframework.boot:spring-boot"
    implementation "org.springframework.boot:spring-boot-starter"
//    implementation "org.springframework.boot:spring-boot-starter-actuator"
//    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-integration"
    implementation "org.springframework.boot:spring-boot-starter-web"
//    implementation "org.springframework.boot:spring-boot-starter-jersey"

    implementation "org.springframework.boot:spring-boot-starter-web-services"
    implementation "org.springframework.boot:spring-boot-starter-security"

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.session:spring-session-core'

    implementation "io.grpc:grpc-protobuf:${grpcProtobufVer}"
    implementation "io.grpc:grpc-stub:${grpcProtobufVer}"
//    implementation "io.grpc:grpc-netty:${grpcProtobufVer}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcProtobufVer}"
    implementation "com.google.protobuf:protobuf-java:${protobufProtocVer}"
    implementation "net.devh:grpc-server-spring-boot-starter:${grpcServerVer}"

//    implementation "org.hibernate.validator:hibernate-validator"

//    implementation "org.springframework.boot:spring-boot-docker-compose"

//    implementation "org.springframework.security:spring-security-web:${springVersion}"
//    implementation "org.springframework.security:spring-security-config:${springVersion}"

    implementation "org.apache.commons:commons-dbcp2:${apacheCommonVersion}"
    implementation "org.apache.commons:commons-pool2:${apacheCommonVersion}"

//    implementation "javax.servlet:jstl:${jstlVersion}"
//    implementation "org.aspectj:aspectjrt:${aspectjVersion}"
//    implementation "org.aspectj:aspectjweaver:${aspectjVersion}"

    implementation "org.springframework.boot:spring-boot-starter-websocket"
    implementation "org.bouncycastle:bcprov-jdk18on:${bouncycastleVersion}"

    implementation "com.h2database:h2:${h2Version}"
    implementation "org.postgresql:postgresql:${pgsqlVersion}"
    implementation 'com.microsoft.sqlserver:mssql-jdbc:12.6.1.jre11'
    implementation "org.infinispan:infinispan-core-jakarta"
//    providedRuntime "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"
//    providedRuntime "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
//    providedRuntime "org.apache.tomcat.embed:tomcat-embed-websocket:${tomcatVersion}"
//    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation "org.infinispan:infinispan-commons-jakarta"
    testImplementation "org.assertj:assertj-core"
    testImplementation "com.auth0:java-jwt:${javaJwtVer}"
    testImplementation "org.springframework.boot:spring-boot-starter-webflux"
//    testImplementation "org.springframework.boot:spring-boot-starter-validation"
//    testImplementation "org.hibernate.validator:hibernate-validator"
//    testImplementation "org.hibernate.validator:hibernate-validator-annotation-processor"
//    testImplementation "org.springframework.integration:spring-integration-test:${springbootVersion}"

//    testCompile "junit":junit:${junitVersion}"
}

test {
    useJUnitPlatform()
}
//final def env = "${System.getProperty('spring.profiles.active')}"
//final def env = "${project.getProperties().get('env')}"
final def env = "${System.getProperty('env')}"
processResources {
//    filesMatching('*.yml') {
//        expand(project.properties)
//    }
    filesMatching('*.yml') {
        expand(System.properties)
    }
}

bootJar { archiveFileName = "${archiveBaseName.get()}-${env}-${appVersion}.${archiveExtension.get()}" }
//bootWar { archiveFileName = "${archiveBaseName.get()}-${env}-${appVersion}.${archiveExtension.get()}" }

//protobuf {
//    protoc {
//        artifact = "com.google.protobuf:protoc:${protobufProtocVer}"
//    }
////    generatedFilesBaseDir = "$projectDir/src/generated"
//    plugins {
//        grpc {
//            artifact = "io.grpc:protoc-gen-grpc-java:${grpcProtobufVer}"
//        }
//    }
////    generateProtoTasks {
////        all()*.plugins {
////            grpc {}
////        }
////    }
//    generateProtoTasks {
//        all().each { task ->
//            task.builtins { java {} }
//            task.plugins { grpc {} }
//        }
//    }
//}
//sourceSets {
//    main {
//        proto {
//            srcDirs += 'src/main/proto'
//        }
//        java {
//            srcDirs += 'build/generated/source/proto/main/grpc'
//            srcDirs += 'build/generated/source/proto/main/java'
//        }
//    }
//}
sourceSets {
//    generated {
//        java {
//            srcDirs += "$projectDir/src/generated/main/java"
//            srcDirs += "$projectDir/src/generated/main/grpc"
//        }
//    }
    main {
        java {
            srcDirs += "src/generated/main/java"
            srcDirs += "src/generated/main/grpc"
        }
    }
}
//compileJava.dependsOn generateProto
